/* 
	Definição dos conceitos base do problema
*/
abstract sig Vehicle {}
abstract sig Button {}


/* 
	Definição dos tipos de veículo
*/
sig USA extends Vehicle{
	danger_us : one Danger_Button,
	engine_us : one Engine_Status
}
sig EU extends Vehicle{
	danger_eu : one Danger_Button,
	engine_eu : one Engine_Status
}
sig CAN extends Vehicle{
	danger_can : one Danger_Button,
	engine_can : one Engine_Status
}
sig BLIN extends Vehicle{
	danger_blin : one Danger_Button,
	dark_blin   : one Darkness_Mode,
	engine_blin : one Engine_Status
}


/* 
	Definição do estado dos butões
*/
var sig On in Button {}

/* 
	Definição dos butões
*/
sig Danger_Button extends Button {}
sig Darkness_Mode extends Button {}
sig Engine_Status extends Button {}

/* 
	Definição de predicados 
*/

pred init {
	/* Todos os carros iniciam com o motor desligado*/
	no engine_can.On
	no engine_eu.On
	no engine_blin.On
	no engine_us.On
	/* Todos os carros iniciam com as luzes desligadas*/
	no danger_us.On
	no danger_eu.On
	no danger_can.On
	no danger_blin.On
 	no dark_blin.On
}

fact belongs_to {
	/* 
	Todos os veículos tem botões 
	*/
	all u:USA | always one u.danger_us
	all c:CAN | always one c.danger_can
	all e:EU  | always one e.danger_eu
	all u:BLIN| always one u.danger_blin
	/* 
	Os botões e sensores apenas pertencem a um veículo ??
	*/
		
}

pred engine_start [v:Vehicle] {
	
}


pred skip[] {
}
fact event{
	/* so se pode passar de um estado para um novo caso exista 
	   uma operação de leitura ou de escrita
	*/
	init 
	always (some v :Vehicle | engine_start[v] or skip)
}
run{} 
